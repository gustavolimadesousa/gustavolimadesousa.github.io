.experiencia {
  max-width: 1200px; /* Tamanho máximo do conteudo definido antes. */
  padding: 40px 20px; /* Serve para desgrudar o conteúdo. */
  margin: 0 auto; /* Aplica as margens automáticas para os lados esquerdos e direitos. necessário porque temos um max-width. */
  display: grid;
  grid-template-columns: 1fr 2fr;
  gap: 100px;
}

.experiencia .subtitulo {
  color: #e0e0e0; /* Define a cor. Os outros parâmetros foram definidos na stylesheet geral pois a classe .subtilo é usada em diferentes seções. */
}

.experiencia-texto {
font-size: 1.5rem;
line-height: 1.33; /* Isso faz com que as linhas dos paragrafos fiquem mais juntas umas das outras.  */
margin-bottom: 60px;
max-width: 40ch; /* Define a quantidade máxima de caracteres que eu desejo em uma linha antes que ela faça a quebra. */
color: #525252;
}

.experiencia-texto strong {
  color: #141414;
}

.empresa {
  display: grid;
  grid-template-columns: 1fr 1fr;
  background-color: #f5f5f5; /* Cor de fundo. */
  padding: 20px;
  margin-bottom: 20px; /* Separa os itens. */
  border-radius: 4px;
  position: relative;
  gap: 10px 20px; /* Cria espaço entre os elementos. */
}

.empresa-ano {
  position: absolute; /* Isso faz com que o ano sai do flow do grid. Fazendo isso eu tenho que colocar o elemento pai como position relative. Se não quando for definir a posição o elemento procura as medidas do elemento raiz. */
  top: 22px; /* Define a posição. */
  left: -100px; /* Define a posição. */
  color: #525252;
  font-size: .875rem;
  width: 80px; /* Aumenta o tamanho do elemento para que o conteudo possa alinhar todo a direita com a propriedade text-align. Qualquer coisa mudar o background pra lembrar o que se passa.   */
  text-align: right;
}

.empresa::before {
  content: ''; /* Sempre é necessario adicionar um content quando for adicionar um pseudo elemento. */
  display: block; /* Quando adicionar um pseudo-element tem sempre que selecionar display block ou inline-block. */
  width: 4px; /* Define a largura do pseudo-element */
  height: 20px; /* Define a altura do pseudo-element */
  background: linear-gradient(#b6f829,#67dd0a);
  position: absolute; /* Tira o elemento do flow da grid. */
  top: 20px; /* Ajusta o pseudo-elemento */
  left: -4px; /* Ajusta o pseudo-elemento */
}

.empresa-titulo{
  font-size: 1.125rem;
  line-height: 1.1;
  font-weight: bold; /* Define o texto como negrito. */
}

.empresa-texto {
  font-size: 0.875rem;
  line-height: 1.4;
  color: #525252;
}

.empresa-habilidades {
  display: flex; /* Coloca os elementos um do lado do outro. */
  flex-wrap: wrap; /* Faz a quebra dos elementos para o lado. */
  gap: 10px; /* Da espaço entre os elementos. */
  align-content: start; /* Para alinhar todos os elementos ao início. */
}

.empresa-habilidades li{
  font-size: .875rem;
  line-height: 1.4;
  border-radius: 4px;
  background-color: #fff;
  padding: 5px 10px;
}

@media (max-width: 800px) {
.experiencia {
  grid-template-columns: 1fr;
  gap: 40px;
}

.experiencia .subtitulo{
  color: #141414;
}

.experiencia-texto {
  font-size: 1.25rem;
}

.empresa-ano {
position: initial; /* O elemento volta a fazer parte do elemento de grid.  */
order: 1; /* Como nenhum elemento tem ordem no grid definida esse elemento vai para o fim. Fica como se todos os outros elemento fossem 0. */
width: initial; /* Tira o width anterior utilizado para colocar todos os elemento a direita. */
text-align: left; /* Alinha o texto a esquerda. */
}
}

@media (max-width: 400px) {
  /* Media utilizado pra quando o conteudo for exibido em uma tela ainda menor. */
.empresa {
  grid-template-columns: 1fr;
}
}